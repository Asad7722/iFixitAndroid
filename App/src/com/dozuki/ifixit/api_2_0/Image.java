// Code generated by Wire protocol buffer compiler, do not edit.
package com.dozuki.ifixit.api_2_0;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REQUIRED;

public final class Image extends Message {

  public static final Integer DEFAULT_SRCID = 0;
  public static final Integer DEFAULT_WIDTH = 0;
  public static final Integer DEFAULT_HEIGHT = 0;
  public static final String DEFAULT_MARKUP = "";
  public static final String DEFAULT_EXIF = "";
  public static final String DEFAULT_RATIO = "";

  @ProtoField(tag = 1, label = REQUIRED)
  public final ImageLight image;

  @ProtoField(tag = 2, type = INT32)
  public final Integer srcid;

  @ProtoField(tag = 3, type = INT32, label = REQUIRED)
  public final Integer width;

  @ProtoField(tag = 4, type = INT32, label = REQUIRED)
  public final Integer height;

  @ProtoField(tag = 5, type = STRING)
  public final String markup;

  @ProtoField(tag = 6, type = STRING)
  public final String exif;

  @ProtoField(tag = 7, type = STRING, label = REQUIRED)
  public final String ratio;

  private Image(Builder builder) {
    super(builder);
    this.image = builder.image;
    this.srcid = builder.srcid;
    this.width = builder.width;
    this.height = builder.height;
    this.markup = builder.markup;
    this.exif = builder.exif;
    this.ratio = builder.ratio;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Image)) return false;
    Image o = (Image) other;
    return equals(image, o.image)
        && equals(srcid, o.srcid)
        && equals(width, o.width)
        && equals(height, o.height)
        && equals(markup, o.markup)
        && equals(exif, o.exif)
        && equals(ratio, o.ratio);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = image != null ? image.hashCode() : 0;
      result = result * 37 + (srcid != null ? srcid.hashCode() : 0);
      result = result * 37 + (width != null ? width.hashCode() : 0);
      result = result * 37 + (height != null ? height.hashCode() : 0);
      result = result * 37 + (markup != null ? markup.hashCode() : 0);
      result = result * 37 + (exif != null ? exif.hashCode() : 0);
      result = result * 37 + (ratio != null ? ratio.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<Image> {

    public ImageLight image;
    public Integer srcid;
    public Integer width;
    public Integer height;
    public String markup;
    public String exif;
    public String ratio;

    public Builder() {
    }

    public Builder(Image message) {
      super(message);
      if (message == null) return;
      this.image = message.image;
      this.srcid = message.srcid;
      this.width = message.width;
      this.height = message.height;
      this.markup = message.markup;
      this.exif = message.exif;
      this.ratio = message.ratio;
    }

    public Builder image(ImageLight image) {
      this.image = image;
      return this;
    }

    public Builder srcid(Integer srcid) {
      this.srcid = srcid;
      return this;
    }

    public Builder width(Integer width) {
      this.width = width;
      return this;
    }

    public Builder height(Integer height) {
      this.height = height;
      return this;
    }

    public Builder markup(String markup) {
      this.markup = markup;
      return this;
    }

    public Builder exif(String exif) {
      this.exif = exif;
      return this;
    }

    public Builder ratio(String ratio) {
      this.ratio = ratio;
      return this;
    }

    @Override
    public Image build() {
      checkRequiredFields();
      return new Image(this);
    }
  }
}
